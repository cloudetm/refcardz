Description: >
    This template deploys a VPC, with one public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets.
Metadata:
    'AWS::CloudFormation::Interface':
      ParameterGroups:
        - Label:
            default: Availability Zone Configuration
          Parameters:
          - AwsRegion
        - Label:
            default: Application Configuration
          Parameters:
          - EnvironmentName
        - Label:
            default: Network Configuration
          Parameters:
          - VpcCIDR
          - PublicSubnetACIDR
          - PrivateSubnetACIDR
Parameters:
    AwsRegion:
        Description: AWS region
        Type: String
        Default: "eu-west-1"
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: 'test'
    VpcCIDR:
        AllowedPattern: >-
          ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
        ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: '10.111.0.0/16'
    PublicSubnetACIDR:
        AllowedPattern: >-
          ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
        ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: '10.111.1.0/24'
    PrivateSubnetACIDR:
        AllowedPattern: >-
              ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
        ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: '10.111.2.0/24'

Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsHostnames: 'true'
        EnableDnsSupport: 'true'
        Tags:
        - Key: Name
          Value: !Join ['-', [!Ref 'AWS::StackName', 'vpc', !Sub "${EnvironmentName}"]]
        - Key: Project
          Value: !Join ['', ['linux', 'academy', 'networking']]
        - Key: Tag
          Value: 'site a'

    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: Name
          Value: !Join ['-', [!Ref 'AWS::StackName', 'igw', !Sub "${EnvironmentName}"]]
        - Key: Network
          Value: 'Public'
        - Key: Project
          Value: !Join ['', ['linux', 'academy', 'networking']]

    VPCGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC

    PublicSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        AvailabilityZone: !Select [ 0, !GetAZs ]
        CidrBlock: !Ref PublicSubnetACIDR
        MapPublicIpOnLaunch: true
        Tags:
        - Key: Name
          Value: !Join ['-', [!Ref 'AWS::StackName', 'public', 'subnet', !Select [ 0, !GetAZs ], !Sub "${EnvironmentName}"]]
        - Key: Project
          Value: !Join ['', ['linux', 'academy', 'networking']]
        - Key: Network
          Value:  !Join ['-', ['public', !Select [ 0, !GetAZs ]]]

    PrivateSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        AvailabilityZone: !Select [ 0, !GetAZs ]
        CidrBlock: !Ref PrivateSubnetACIDR
        MapPublicIpOnLaunch: false
        Tags:
        - Key: Name
          Value: !Join ['-', [!Ref 'AWS::StackName', 'private', 'subnet', !Select [ 0, !GetAZs ], !Sub "${EnvironmentName}"]]
        - Key: Project
          Value: !Join ['', ['linux', 'academy', 'networking']]
        - Key: Network
          Value:  !Join ['-', ['private', !Select [ 0, !GetAZs ]]]

    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: !Join ['-', [!Ref 'AWS::StackName', 'Public', 'Route', !Select [ 0, !GetAZs ], !Sub "${EnvironmentName}"]]
        - Key: Project
          Value: !Join ['', ['Linux', 'Academy', 'Networking']]
        - Key: Network
          Value: 'public'

    DefaultPublicRoute:
      Type: AWS::EC2::Route
      DependsOn: VPCGatewayAttachment
      Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway

    PublicSubnetARouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PublicRouteTable
        SubnetId: !Ref PublicSubnetA

    PrivateRouteTableA:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: !Join ['-', [!Ref 'AWS::StackName', 'private', 'route', !Select [ 0, !GetAZs ], !Sub "${EnvironmentName}"]]
        - Key: Project
          Value: !Join ['', ['linux', 'academy', 'networking']]
        - Key: Network
          Value: 'private-a'

    DefaultPrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PrivateRouteTableA
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGatewayA
    PrivateSubnetARouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PrivateRouteTableA
        SubnetId: !Ref PrivateSubnetA
    NatGatewayAEIP:
      Type: AWS::EC2::EIP
      DependsOn: VPCGatewayAttachment
      Properties:
        Domain: vpc
    NatGatewayA:
      Type: AWS::EC2::NatGateway
      Properties:
        AllocationId: !GetAtt NatGatewayAEIP.AllocationId
        SubnetId: !Ref PublicSubnetA

Outputs:
    VPC:
      Description: A reference to the created VPC
      Value: !Ref VPC
      Export:
        Name:
         !Join ['-', [!Ref 'AWS::StackName', 'vpcid', !Sub "${EnvironmentName}"]]
    PublicSubnets:
      Description: A list of the public subnets
      Value: !Join [ ",", [ !Ref PublicSubnetA ]]
    PrivateSubnets:
      Description: A list of the private subnets
      Value: !Join [ ",", [ !Ref PrivateSubnetA]]
    PublicSubnetA:
      Description: A reference to the public subnet in the 1st Availability Zone
      Value: !Ref PublicSubnetA
      Export:
        Name:
         !Join ['-', [!Ref 'AWS::StackName', 'public', 'subnet', 'a', !Sub "${EnvironmentName}"]]
    PrivateSubnetA:
      Description: A reference to the private subnet in the 1st Availability Zone
      Value: !Ref PrivateSubnetA
      Export:
        Name:
         !Join ['-', [!Ref 'AWS::StackName', 'private', 'subnet', 'a', !Sub "${EnvironmentName}"]]
